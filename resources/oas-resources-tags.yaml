openapi: 3.0.0
info:
  version: 4.0.0
  title: Gitlab API - uncomplete
  description: A retro documentation of the gitlab API.
servers:
  - url: 'https://localhost/api/v4'
paths:
  /projects/{projectId}/repository/tags:
    get:
      description: |
        List project repository tags. 
        Get a list of repository tags from a project, sorted by name in reverse alphabetical order. This endpoint can be accessed without authentication if the repository is publicly accessible.
        https://docs.gitlab.com/ee/api/tags.html
      summary: List project repository TAGs. 
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID or URL-encoded path of the project owned by the authenticated user
          schema:
            type: string      
        - name: order_by
          in: query
          description: Return tags ordered by name or updated fields. Default is updated
          required: false
          schema:
            type: string
        - name: sort
          in: query
          description: Return tags sorted in asc or desc order. Default is desc
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Return list of tags matching the search criteria. You can use ^term and term$ to find tags that begin and end with term respectively.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of projects found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new tag
      description: |
        Creates a new tag in the repository that points to the supplied ref.
      requestBody:
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Tag_to_create'
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID or URL-encoded path of the project owned by the authenticated user
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /projects/{projectId}/repository/tags/{tag_name}:
    get:
      description: |
        Get a specific repository tag determined by its name. This endpoint can be accessed without authentication if the repository is publicly accessible.
      summary: Get a single repository tag 
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID or URL-encoded path of the project owned by the authenticated user
          schema:
            type: string      
        - name: tag_name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of projects found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a tag
      description: |
        Deletes a tag of a repository with given name.
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID or URL-encoded path of the project owned by the authenticated user
          schema:
            type: string
        - name: tag_name
          in: path
          required: true
          description: The name of a tag
          schema:
            type: string            
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"  
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
    Tag_to_create:
      type: object
      properties:
        tag_name:
          type: string
          description: The name of a tag
        ref:
          type: string
          description: Create tag using commit SHA, another tag name, or branch name
        message:
          type: string
          description: Creates annotated tag
        release_description:
          type: string
          description:  Add release notes to the Git tag and store it in the GitLab database
      required:
        - tag_name
        - ref
    Tag:
      type: object
      properties:
        commit:
          type: object
          properties:
            id::
              type: string
            short_id:
              type: string
            title:
              type: string
            created_at:
              type: string
              format: date-time
            parent_ids:
              type: array
              items: 
                type: string
            message:
              type: string
            author_name:
              type: string
            author_email:
              type: string
            authored_date:
              type: string
              format: date-time
            committer_name:
              type: string
            committer_email:
              type: string
            committed_date:
              type: string
              format: date-time
        release:
            type: object
            properties:
              tag_name:
                type: string
              description:
                type: string
        name:
          type: string
        target:
          type: string
        message:
          type: string
        protected:
          type: boolean
      

