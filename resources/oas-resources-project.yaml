openapi: 3.0.0
info:
  version: 4.0.0
  title: Gitlab API - uncomplete
  description: A retro documentation of the gitlab API.
servers:
  - url: 'https://localhost/api/v4'
paths:
  /projects:
    get:
      description: |
        List all projects. 
        Get a list of all visible projects across GitLab for the authenticated user. 
        When accessed without authentication, only public projects with simple fields are returned.
        https://docs.gitlab.com/ee/api/projects.html
      summary: List all projects. 
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: archived
          in: query
          description: Limit by archived status.
          required: false
          schema:
            type: boolean
        - name: id_after
          in: query
          description: Limit results to projects with IDs greater than the specified ID.
          required: false
          schema:
            type: integer
        - name: id_before
          in: query
          description: Limit results to projects with IDs less than the specified ID.
          required: false
          schema:
            type: integer
        - name: last_activity_after
          in: query
          description: Limit results to projects with last_activity after specified time. Format ISO8601 YYYY-MM-DDTHH:MM:SSZ
          required: false
          schema:
            type: string
            format: date-time
        - name: last_activity_before
          in: query
          description: Limit results to projects with last_activity before specified time. Format ISO 8601 YYYY-MM-DDTHH:MM:SSZ
          required: false
          schema:
            type: string
            format: date-time
        - name: membership
          in: query
          description: Limit by projects that the current user is a member of.
          required: false
          schema:
            type: boolean
        - name: min_access_level
          in: query
          description: Limit by current user minimal access level.
          required: false
          schema:
            type: integer
        - name: order_by
          in: query
          description: Return projects ordered by id, name, path, created_at, updated_at, or last_activity_at fields. repository_size, storage_size, packages_size or wiki_size fields are only allowed for admins. Default is created_at.
          required: false
          schema:
            type: string
        - name: owned
          in: query
          description: Limit by projects explicitly owned by the current user.
          required: false
          schema:
            type: boolean
        - name: repository_checksum_failed
          in: query
          description: Limit projects where the repository checksum calculation has failed (Introduced in GitLab Premium 11.2).
          required: false
          schema:
            type: boolean
        - name: repository_storage
          in: query
          description: Limit results to projects stored on repository_storage. (admins only)
          required: false
          schema:
            type: string     
        - name: search_namespaces
          in: query
          description: Include ancestor namespaces when matching search criteria. Default is false.
          required: false
          schema:
            type: boolean
        - name: search
          in: query
          description: Return list of projects matching the search criteria.
          required: false
          schema:
            type: string
            format: int32
        - name: simple
          in: query
          description: Return only limited fields for each project. This is a no-op without authentication as then only simple fields are returned.
          required: false
          schema:
            type: boolean
            format: int32
        - name: sort
          in: query
          description: Return projects sorted in asc or desc order. Default is desc.
          required: false
          schema:
            type: string
        - name: starred
          in: query
          description: Limit by projects starred by the current user.
          required: false
          schema:
            type: boolean
        - name: statistics
          in: query
          description: Include project statistics.
          required: false
          schema:
            type: boolean
        - name: visibility
          in: query
          description: Limit by visibility public, internal, or private.
          required: false
          schema:
            type: string
        - name: wiki_checksum_failed
          in: query
          description: Limit projects where the wiki checksum calculation has failed (Introduced in GitLab Premium 11.2).
          required: false
          schema:
            type: boolean
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response. (admins only)
          required: false
          schema:
            type: boolean
        - name: with_issues_enabled
          in: query
          description: Limit by enabled issues feature.
          required: false
          schema:
            type: boolean
        - name: with_merge_requests_enabled
          in: query
          description: Limit by enabled merge requests feature.
          required: false
          schema:
            type: boolean
        - name: with_programming_language
          in: query
          description: Limit by projects which use the given programming language.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of projects found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /projects/{projectId}:
    get:
      description: |
        Get a specific project. This endpoint can be accessed without authentication if the project is publicly accessible.
      summary: Get a specific project.
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID or URL-encoded path of the project.
          schema:
            type: string
        - name: license
          description: Include project license data.
          in: query
          schema:
            type: boolean
        - name: statistics
          in: query
          description: Include project statistics.
          schema:
            type: boolean
        - name: with_custom_attributes
          in: query
          description: Include custom attributes in response. (admins only)
          schema:
            type: boolean
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
    Namespace:
      type: object
      properties:
        id:
          type: integer
        name: 
          type: string
        path: 
          type: string
        kind: 
          type: string
        full_path: 
          type: string
    Statistics:
      type: object
      properties:
        commit_count:
          type: integer
        storage_size:
          type: integer
        repository_size:
          type: integer
        wiki_size:
          type: integer
        lfs_objects_size:
          type: integer
        job_artifacts_size:
          type: integer
        packages_size:
          type: integer
        snippets_size:
          type: integer
    RelatedLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
        issues:
          type: string
          format: uri
        merge_requests:
          type: string
          format: uri
        repo_branches:
          type: string
          format: uri
        labels:
          type: string
          format: uri
        events:
          type: string
          format: uri
        members:
          type: string
          format: uri
    Project:
      type: object
      properties:
        id:
          type: integer
        description: 
          type: string
        default_branch:
          type: string
        visibility:
          type: string
        ssh_url_to_repo:
          type: string
          format: uri
        http_url_to_repo:
          type: string
          format: uri
        web_url:
          type: string
          format: uri
        readme_url:
          type: string
          format: uri
        tag_list:
          type: array
          items:
            type: string
        owner:
          $ref: '#/components/schemas/User'
        name:
          type: string
        name_with_namespace:
          type: string
        path:
          type: string
        path_with_namespace:
          type: string
        issues_enabled:
          type: boolean
        open_issues_count:
          type: integer
        merge_requests_enabled:
          type: boolean
        jobs_enabled:
          type: boolean
        wiki_enabled:
          type: boolean
        snippets_enabled:
          type: boolean
        can_create_merge_request_in:
          type: boolean
        resolve_outdated_diff_discussions:
          type: boolean
        container_registry_enabled:
          type: boolean
        created_at:
          type: string
          format: date-time
        last_activity_at:
          type: string
          format: date-time
        creator_id:
          type: integer
        namespace:
          $ref: '#/components/schemas/Namespace'
        import_status:
          type: string
        archived:
          type: boolean
        avatar_url:
          type: string
          format: uri
        shared_runners_enabled:
          type: boolean
        forks_count:
          type: integer
        star_count:
          type: integer
        runners_token:
          type: string
        ci_default_git_depth:
          type: integer
        ci_forward_deployment_enabled:
          type: boolean
        public_jobs:
          type: boolean
        shared_with_groups:
          type: array
          items: 
            type: string
        only_allow_merge_if_pipeline_succeeds:
          type: boolean
        allow_merge_on_skipped_pipeline:
          type: boolean
        only_allow_merge_if_all_discussions_are_resolved:
          type: boolean
        remove_source_branch_after_merge:
          type: boolean
        request_access_enabled:
          type: boolean
        merge_method:
          type: string
        autoclose_referenced_issues:
          type: boolean
        suggestion_commit_message:
          type: string
        marked_for_deletion_on:
          type: string
          format: date-time
        statistics:
          $ref: '#/components/schemas/Statistics'
        _links:
          $ref: '#/components/schemas/RelatedLinks'

